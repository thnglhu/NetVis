#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.25.1
#  in conjunction with Tcl version 8.6
#    Sep 25, 2019 08:35:56 AM +07  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = top_level (root)
    gui_support.init(root, top)
    root.mainloop()

w = None
def create_top_level(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = top_level (w)
    gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_top_level():
    global w
    w.destroy()
    w = None

class top_level:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1024x680+623+25")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="File")
        self.sub_menu.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=gui_support.load_file,
                font="TkMenuFont",
                foreground="#000000",
                label="Load")
        self.sub_menu.add_separator(
                background="#d9d9d9")
        self.sub_menu.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=gui_support.settings,
                font="TkMenuFont",
                foreground="#000000",
                label="Settings")
        self.sub_menu.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=gui_support.exit,
                font="TkMenuFont",
                foreground="#000000",
                label="Exit")

        self.canvas_frame = tk.Frame(top)
        self.canvas_frame.place(relx=0.01, rely=0.015, relheight=0.963
                , relwidth=0.688)
        self.canvas_frame.configure(relief='groove')
        self.canvas_frame.configure(borderwidth="2")
        self.canvas_frame.configure(relief="groove")
        self.canvas_frame.configure(background="#d9d9d9")
        self.canvas_frame.configure(highlightbackground="#d9d9d9")
        self.canvas_frame.configure(highlightcolor="black")

        self.canvas = tk.Canvas(self.canvas_frame)
        self.canvas.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=1.0)
        self.canvas.configure(background="#d9d9d9")
        self.canvas.configure(highlightbackground="#d9d9d9")
        self.canvas.configure(highlightcolor="black")
        self.canvas.configure(insertbackground="black")
        self.canvas.configure(relief="ridge")
        self.canvas.configure(selectbackground="#c4c4c4")
        self.canvas.configure(selectforeground="black")
        self.canvas.configure(takefocus="0")

        self.data_frame = tk.LabelFrame(top)
        self.data_frame.place(relx=0.713, rely=0.0, relheight=0.978
                , relwidth=0.273)
        self.data_frame.configure(relief='groove')
        self.data_frame.configure(foreground="black")
        self.data_frame.configure(text='''Data''')
        self.data_frame.configure(background="#d9d9d9")
        self.data_frame.configure(highlightbackground="#d9d9d9")
        self.data_frame.configure(highlightcolor="black")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.0, rely=1.0, relheight=0.037, relwidth=1.001)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.fra51_lab66 = tk.Label(self.Frame1)
        self.fra51_lab66.place(relx=0.01, rely=0.0, height=11, width=34)
        self.fra51_lab66.configure(activebackground="#f9f9f9")
        self.fra51_lab66.configure(activeforeground="black")
        self.fra51_lab66.configure(background="#d9d9d9")
        self.fra51_lab66.configure(disabledforeground="#a3a3a3")
        self.fra51_lab66.configure(foreground="black")
        self.fra51_lab66.configure(highlightbackground="#d9d9d9")
        self.fra51_lab66.configure(highlightcolor="black")
        self.fra51_lab66.configure(text='''x:''')

if __name__ == '__main__':
    vp_start_gui()





